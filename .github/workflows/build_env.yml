name: Build Env Schedule Test

on:
  schedule:
    # Run the job every 3 hours
    - cron: "0 */12 * * *"
  workflow_dispatch:

jobs:
  build_container:
    name: Building env container
    runs-on: [self-hosted, linux, common, build]
    steps:
      - uses: actions/checkout@v2
      - name: Test nodejs in our runners
        uses: actions/github-script@v6
        with:
          script: |
            const sodium = require('tweetsodium');

            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");

            let ecr_output = '';
            let ecr_error = '';
            const options = {};
            options.listeners = {
                stdout: (data) => {
                    ecr_output += data.toString();
                },
                stderr: (data) => {
                    ecr_error += data.toString();
                }
            };
            await exec.exec('aws', ['ecr', 'get-login-password', '--region', 'ca-central-1'], options);
            console.log(ecr_output);
            const pub_key = await github.rest.actions.getRepoPublicKey({
                owner,
                repo,
            });
            const key = pub_key.data.key;
            const key_id = pub_key.data.key_id;
            const value = ecr_output;

            // Convert the message and key to Uint8Array's (Buffer implements that interface)
            const message_bytes = Buffer.from(value);
            const key_bytes = Buffer.from(key, 'base64');

            // Encrypt using LibSodium.
            const encrypted_bytes = sodium.seal(message_bytes, key_bytes);

            // Base64 the encrypted secret
            const encrypted_value = Buffer.from(encrypted_bytes).toString('base64');
            const secret_name = 'ECR_PASSWORD';
            console.log(encrypted_value);
            await octokit.rest.actions.createOrUpdateRepoSecret({
                owner,
                repo,
                secret_name,
                encrypted_value,
                key_id,
            })

      - name: Build
        if: ${{ false }}
        run: ./build/env/setup.sh
