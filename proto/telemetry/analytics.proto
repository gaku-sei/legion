syntax = "proto3";
import public "process.proto";
import public "stream.proto";
import public "block.proto";

package analytics;

service PerformanceAnalytics {
    rpc find_process(FindProcessRequest) returns (FindProcessReply);
    rpc list_recent_processes(RecentProcessesRequest) returns (ProcessListReply);
    rpc list_process_streams(ListProcessStreamsRequest) returns (ListStreamsReply);
    rpc list_stream_blocks(ListStreamBlocksRequest) returns (ListStreamBlocksReply);
    rpc block_call_tree(BlockCallTreeRequest) returns (BlockCallTreeReply);
}

message FindProcessRequest{
    string process_id = 1;
}

message FindProcessReply{
    telemetry.Process process = 1;
}

message RecentProcessesRequest{
}

message ProcessListReply {
    repeated telemetry.Process processes = 1;
}

message ListProcessStreamsRequest{
    string process_id = 1;
}

message ListStreamsReply{
    repeated telemetry.Stream streams = 1;
}

message ListStreamBlocksRequest{
    string stream_id = 1;
}

message ListStreamBlocksReply{
    repeated telemetry.Block blocks = 1;
}

message BlockCallTreeRequest{
    telemetry.Process process = 1;
    telemetry.Stream stream = 2;
    string block_id = 3;
}

message ScopeInstance{
    string name = 1; //factor out scope_desc
    double begin_ms = 2;
    double end_ms = 3;
    repeated ScopeInstance scopes = 4;
}

message BlockCallTreeReply{
    repeated ScopeInstance scopes = 1;
   
}