/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/**
 * Get the value specified by the key.
 *
 * If the value does not exist, None is returned.
 *
 * # Errors
 *
 * If any error occurs, including the specified key not existing in the
 * configuration, it is returned.
 */
export function get(key: string): any | undefined | null
/**
 * Get the value specified by the key or a specified default value if it is
 * not found.
 *
 * If the value does not exist, the specified default value is returned.
 *
 * # Errors
 *
 * If any other error occurs, it is returned.
 */
export function getOr(key: string, defaultValue: any): any
/**
 * Get the absolute path at the specified key.
 *
 * If the specified path is relative, it will be resolved relative to its
 * containing configuration file, or the current working directory if the
 * value does not come from a file.
 *
 * # Errors
 *
 * If any error occurs, including the specified key not existing in the
 * configuration, it is returned.
 */
export function getAbsolutePath(key: string): string | undefined | null
/**
 * Get the absolute path at the specified key or the specified default.
 *
 * If the specified path is relative, it will be resolved relative to its
 * containing configuration file, or the current working directory if the
 * value does not come from a file.
 *
 * # Errors
 *
 * If any error occurs, including the specified key not existing in the
 * configuration, it is returned.
 */
export function getAbsolutePathOr(key: string, defaultValue: string): string
/**
 * Takes a [`HashMap`] which keys are environment variable names and values are
 * config keys and return another [`HashMap`] which values have been resolved.
 *
 * # Example
 *
 * ```ts
 * getAll({
 *   SOMETHING_USEFUL: "key.subkey",
 *   ANOTHER_GREAT_THING: "another.deeper.key",
 * });
 * ```
 *
 * Given the config files are defined accordingly the above will return:
 *
 * ```json
 * {
 *   "SOMETHING_USEFUL": "I found this useful value in the config file(s)",
 *   "ANOTHER_GREAT_THING": "An this value too"
 * }
 * ```
 *
 * If a key is not found, the value set is "`null`"
 *
 * # Errors
 *
 * If any error occurs, including the specified key not existing in the
 * configuration, it is returned.
 */
export function getAll(keys: Record<string, string>): Record<string, any | undefined | null>
/**
 * Works similarly to the [`get_all`] function but will immediately set the found variables
 * in the global `process.env` object.
 *
 * If a key is not found, the value is ignored.
 *
 * # Errors
 *
 * If any error occurs, including the specified key not existing in the
 * configuration, it is returned.
 */
export function loadAll(keys: Record<string, string>): void
